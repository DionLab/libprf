# Instruction to build libGD from internal package source
SET(EXTRA "")
IF(APPLE)
   SET(EXTRA  -DCMAKE_INSTALL_NAME_DIR=${CMAKE_INSTALL_PREFIX}/lib)
ENDIF(APPLE)

IF(PNG_INCLUDE_DIRS)
	SET(EXTRA ${EXTRA} -DCMAKE_FIND_ROOT_PATH=${PNG_INCLUDE_DIRS}/../)
	MESSAGE(STATUS "Forwarding libPNG include dir ${PNG_INCLUDE_DIRS}")
ENDIF(PNG_INCLUDE_DIRS)

INCLUDE(ExternalProject)
EXTERNALPROJECT_ADD(libGD
    URL ${PROJECT_SOURCE_DIR}/third-party/libgd-2.1.1.tar.xz
    PREFIX ${EXTERNAL_INSTALL_LOCATION}/libGD
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/libGD
               -DENABLE_JPEG:BOOL=ON -DENABLE_PNG:BOOL=ON
               ${EXTRA}
)


ExternalProject_Get_Property(libGD install_dir)
#include_directories(BEFORE SYSTEM ${EXTERNAL_INSTALL_LOCATION}/libGD/include)
MESSAGE(STATUS "libGD will be built in ${install_dir}")

SET( GD_LIBRARY_DIRS ${EXTERNAL_INSTALL_LOCATION}/libGD/src/libGD)
# Set uncached variables as per standard.
# 	  set(GD_FOUND ON)

SET(GD_INCLUDE_DIRS ${EXTERNAL_INSTALL_LOCATION}/libGD/src/libGD/src)
MESSAGE(STATUS "libGD include dir: ${GD_INCLUDE_DIRS}")
IF(STANDALONE)
	SET(GD_LIBRARIES ${EXTERNAL_INSTALL_LOCATION}/libGD/src/libGD-build/Bin/libgd${CMAKE_STATIC_LIBRARY_SUFFIX};-lpng;-ljpeg;-lz;-lm)
ELSE(STANDALONE)
	SET(GD_LIBRARIES ${EXTERNAL_INSTALL_LOCATION}/libGD/src/libGD-build/Bin/libgd${CMAKE_SHARED_LIBRARY_SUFFIX})
	INSTALL(DIRECTORY ${EXTERNAL_INSTALL_LOCATION}/libGD/src/libGD-build/Bin 
	        DESTINATION ${CMAKE_INSTALL_PREFIX}
	        USE_SOURCE_PERMISSIONS
	        FILES_MATCHING PATTERN "*${CMAKE_SHARED_LIBRARY_SUFFIX}*" 
 	)
ENDIF(STANDALONE)


MARK_AS_ADVANCED(
GD_INCLUDE_DIRS
GD_LIBRARY_DIRS
GD_LIBRARIES
)
