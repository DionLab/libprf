# Instruction to build libpng from internal package source
INCLUDE(ExternalProject)
SET(EXTRA "")
IF(APPLE)
   SET(EXTRA  -DCMAKE_INSTALL_NAME_DIR=${CMAKE_INSTALL_PREFIX}/lib)
ENDIF(APPLE)

IF(NOT STANDALONE)
  SET(EXTRA ${EXTRA} -DBUILD_SHARED_LIBS=ON)
ENDIF(NOT STANDALONE) 

EXTERNALPROJECT_ADD(libPNG
		SOURCE_DIR ${PROJECT_SOURCE_DIR}/extern/libpng-1.6.18 
		PREFIX ${CMAKE_CURRENT_BINARY_DIR}/libPNG
		CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/libPNG
			   ${EXTRA}
		)

ExternalProject_Get_Property(libPNG install_dir)
include_directories(${CMAKE_CURRENT_BINARY_DIR}/libPNG/include)

MESSAGE( STATUS "libPNG will be built in ${install_dir}" )

#SET( PCRE_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/libHDF5/lib PATH)
# Set uncached variables as per standard.
# 	  set(hdf5_FOUND ON)
SET(PNG_PNG_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/libPNG/include)
SET(CMAKE_FIND_ROOT_PATH ${CMAKE_FIND_ROOT_PATH};${PNG_PNG_INCLUDE_DIR})
IF(STANDALONE)
  SET(PNG_LIBRARY ${CMAKE_CURRENT_BINARY_DIR}/libPNG/lib/libPNG${CMAKE_STATIC_LIBRARY_SUFFIX})
ELSE(STANDALONE)
  SET(PNG_LIBRARY ${CMAKE_CURRENT_BINARY_DIR}/libPNG/lib/libPNG${CMAKE_SHARED_LIBRARY_SUFFIX})
  INSTALL(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/libPNG/lib 
          DESTINATION ${CMAKE_INSTALL_PREFIX}
          USE_SOURCE_PERMISSIONS
					FILES_MATCHING PATTERN "*${CMAKE_SHARED_LIBRARY_SUFFIX}*"
	)
ENDIF(STANDALONE)

