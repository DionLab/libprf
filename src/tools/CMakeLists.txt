IF(PRF_CORE_PCRE)
	ADD_EXECUTABLE(ProfileDump
									../utils/io.c
									$<TARGET_OBJECTS:REGEX_STATIC>
									)
	TARGET_LINK_LIBRARIES(ProfileDump ${PCRE_LIBRARY})
ELSE(PRF_CORE_PCRE)
	ADD_EXECUTABLE(ProfileDump
								 ../utils/io.c
								)
ENDIF(PRF_CORE_PCRE)
target_include_directories(ProfileDump PRIVATE ${PRF_SOURCE_DIR}/include)
SET_PROPERTY(TARGET ProfileDump APPEND PROPERTY COMPILE_DEFINITIONS _TEST)
ADD_DEPENDENCIES(ProfileDump prf_git_version)

IF(PRF_INPUT_HDF5)
	LINK_DIRECTORIES(${PBBAM_LIBRARY_DIRS})
	ADD_EXECUTABLE(PBTestHDF5 
	               PBTest.c
	               ../input/PacBio/pb_common.c
	               ../input/PacBio/pb_hdf5.c
	               ../dispatch/threadpool.c
	)
	SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} PBTestHDF5)
	SET_PROPERTY(TARGET PBTestHDF5 APPEND PROPERTY INCLUDE_DIRECTORIES "${PBBAM_INCLUDE_DIRS};${HTSLIB_DIR};${HDF5_C_INCLUDE_DIR}")
	TARGET_LINK_LIBRARIES(PBTestHDF5 ${HDF5_C_LIBRARIES})
	IF(BUILD_HDF5)
		ADD_DEPENDENCIES(PBTestHDF5 libHDF5)
	ENDIF(BUILD_HDF5)
	
	IF(PRF_INPUT_PBBAM)
		ADD_EXECUTABLE(PBSummary
            PBSummary.c
            ../input/PacBio/pb_hdf5.c
            ../input/PacBio/pb_bam.cpp
            ../input/PacBio/pb_common.c
        )
		SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} PBSummary)
		SET(EXECUTABLES ${EXECUTABLES} PBSummary) 
		SET_PROPERTY(SOURCE ../input/PacBio/pb_bam.cpp APPEND PROPERTY COMPILE_FLAGS "-std=gnu++11")
		SET_PROPERTY(TARGET PBSummary APPEND PROPERTY INCLUDE_DIRECTORIES "${PBBAM_INCLUDE_DIRS};${HTSLIB_DIR};${HDF5_C_INCLUDE_DIR}")
		
		TARGET_LINK_LIBRARIES(PBSummary ${HDF5_C_LIBRARIES} ${PBBAM_LIBRARIES} ${HTSLIB_LIBRARIES})
		ADD_DEPENDENCIES(PBSummary PacBioBAM)
		
		ADD_EXECUTABLE(FilterBAM FilterBAM.cpp)
		SET_PROPERTY(SOURCE FilterBAM.cpp APPEND PROPERTY COMPILE_FLAGS "-std=gnu++11")
		SET_PROPERTY(TARGET FilterBAM APPEND PROPERTY INCLUDE_DIRECTORIES "${PBBAM_INCLUDE_DIRS};${HTSLIB_DIR};${HDF5_C_INCLUDE_DIR}")
		
		TARGET_LINK_LIBRARIES(FilterBAM  ${PBBAM_LIBRARIES} ${HTSLIB_LIBRARIES})
		ADD_DEPENDENCIES(FilterBAM PacBioBAM)
		SET(EXECUTABLES ${EXECUTABLES} FilterBAM) 
		
	ENDIF(PRF_INPUT_PBBAM)
ENDIF(PRF_INPUT_HDF5)

IF(BUILD_SHARED_LIBS)
  IF(PRF_CORE_DISPATCH)
		ADD_EXECUTABLE(Profiling Profiling.c)
		TARGET_LINK_LIBRARIES(Profiling prf_shared)
		SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} Profiling)
  ENDIF(PRF_CORE_DISPATCH)
  
  IF(PRF_CORE_MAP)
		ADD_EXECUTABLE(Mapping Mapping.c)
		TARGET_LINK_LIBRARIES(Mapping prf_shared)
		SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} Mapping)
  ENDIF(PRF_CORE_MAP)
  
  ADD_EXECUTABLE(ProfileGen pfgen.c)
  TARGET_LINK_LIBRARIES(ProfileGen prf_shared)
  
  #IF(PRF_CORE_ZONE AND PRF_CORE_DISPATCH)
		#ADD_EXECUTABLE(Zoner Zoner.c $<TARGET_OBJECTS:MAP>)
 		#TARGET_INCLUDE_DIRECTORIES(Zoner PUBLIC $<TARGET_PROPERTY:MAP,INTERFACE_INCLUDE_DIRECTORIES>)
		#TARGET_LINK_LIBRARIES(Zoner prf_shared)
		#SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} Zoner)
  #ENDIF(PRF_CORE_ZONE AND PRF_CORE_DISPATCH)
  
ENDIF(BUILD_SHARED_LIBS)

SET(THREAD_SOURCES ../input/PacBio/pb_hdf5.c ../utils/threadpool.c ${THREAD_SOURCES})
# SET(THREAD_EXECUTABLES PBTest ${THREAD_EXECUTABLES} )
SET(EXECUTABLES ${EXECUTABLES} ${THREAD_EXECUTABLES})

# IF(USE_AFFINITY)
#   SET_PROPERTY(TARGET ${THREAD_EXECUTABLES} APPEND PROPERTY COMPILE_DEFINITIONS __USE_AFFINITY__)
# ENDIF(USE_AFFINITY)

# IF(USE_RPATH AND NOT STANDALONE)
#   SET_PROPERTY(TARGET ${EXECUTABLES} PROPERTY INSTALL_RPATH_USE_LINK_PATH TRUE)
# ENDIF(USE_RPATH AND NOT STANDALONE)

IF(CMAKE_COMPILER_IS_INTELCC)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} imf m)
  ENDFOREACH()
ELSE(CMAKE_COMPILER_IS_INTELCC)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} m)
  ENDFOREACH()
ENDIF(CMAKE_COMPILER_IS_INTELCC)

IF(THREADS_HAVE_PTHREAD_ARG)
  SET_PROPERTY(SOURCE ${THREAD_SOURCES}
               APPEND PROPERTY COMPILE_FLAGS -pthread
               APPEND PROPERTY LINK_FLAGS -pthread)
ELSE(THREADS_HAVE_PTHREAD_ARG)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} ${CMAKE_THREAD_LIBS_INIT})
  ENDFOREACH()
ENDIF(THREADS_HAVE_PTHREAD_ARG)

#########################################################################################
# Installation
INSTALL(TARGETS ${EXECUTABLES}
        DESTINATION bin
        COMPONENT Applications
)
